퍼블리셔
-HTML은 정보 전달이라는 목적을 가진 웹 페이지
-정보를 원하는 사람들에게 정보를 효과적으로 정확하게 전달하려면? 
 웹 페이지를 작성하는 사람이 정확하게 파악하고 정보를 구조적으로 표현할 수 있게 작업
-웹 퍼블리셔는 단순히 디자이너가 만든 웹 페이지를 그대로 웹 브라우저로 옮기는 일만 하지는 않음
-웹 퍼블리셔는 컨텐츠를 다루는 사람 / 웹 페이지에서 전달하려는 내용을 제대로 해석하고 그 컨텐츠 해석에 맞게 HTML, CSS, JS를 활용하는 컨텐츠 전문가
-웹 페이지 속 컨텐츠를 잘 해석해 제대로 된 시맨틱한 마크업이 이뤄지고 검색엔진(네이버, 구글)에 최적화된 페이지를 만들어서 본래 의도했던 기획 의도에 맞는 웹 사이트를 만들 수 있음
-사용자와의 사용성도 고려 -> UI/UX
-퍼블리셔는 사이트를 제작할 때 기획, 디자인, 웹 개발까지 모두 아우르면서 작업해야하기때문에 그 포지션이 매우 중요!!!
-퍼블리셔가 되려면 기술적으로는 포토샵, 일러스트, HTML, CSS, JS, Jquery를 배워야 하지만 사용자의 사용성도 고려해야하므로 UI도 많이 신경써야 함
-한 때 특별한 키워드처럼 붐이었던 UI/UX도 깊게 공부를 해야함

웹 기술의 범위가 넓어지고 있음 -> 모바일, e-book, 스마트TV 등 UI를 고려해야하는 상황들이 많아지고 있음
예전의 웹디자이너와 지금의 웹 디자이너는 비교할 수 없을 정도로 전문성을 가지고 있음
앞으로 공부를 해 나가고 진로를 결정할 때 나한테 맞는 방향으로 선택해서 결정
정확한 컨텐츠 마크업, 검색 엔진 최적화에 중점을 둔 페이지를 만드는 데 집중 (퍼블리셔)
사용자와 브라우저 간의 전달 방식, 즉 UI에 전문성을 두고 자바스크립트에 집중 (프론트엔드개발자)
웹 퍼블리셔란 말이 나온 후 퍼블리셔가 어디까지 작업을 해야하는지, 퍼블리셔가 JS까지 작업을 해야 하는 지에 대한 여부와 사용자 인터페이스(UI)에 대한 역할 분담 및 작업 범위에 대한 논란이 많음
내가 어디까지 할 수 있닥 범위를 지정하고 일하지 말고 내가 할 수 있는 것들을 계속 활용 발전
퍼블리셔 -> 웹의 전반을 알고 웹 중심에서 일하는 사람

dbcut awwards 사이트들 참고

반응형 웹이 필요한 사이트
- 사이트의 용도와 사용자들이 주로 어떤 기기로 접속하는지 파악
- 앱애니, 와이즈앱 등

포털사이트(네이버, 다음...)나 쇼핑몰 사이트처럼 사용자가 모바일 기기로 접속하는 경우가 많거나 터치, GPS같은 모바일 기능이 중요한 사이트라면 반응형 웹보다는 모바일 전용 사이트를 따로 만드는게 나음
PC, 모바일 사용자의 접속 빈도가 비슷할 때 반응형 웹이 적절함!

반응형 웹 페이지를 만드는 노하우
1. 살짝 수정 -> 반응형 웹의 가장 간단한 형태 / 화면 너비에 따라 글자 크기나 이미지 크기만 변하도록 하는 것 / 레이아웃은 변하지 않고 컨텐츠의 크기만 바뀌는 것 ( brunch.co.kr )
2. 유동형 패턴 -> 레이아웃은 그대로 유지하면서 컨텐츠의 크기를 조절 (strongegg.com 고급눌러서 안전하지 않은 이동)
3. 칼럼 드롭 패턴 -> 여러 칼럼으로 구성된 레이아웃에서 사용하는 패턴 / 화면 너비가 좁아지면 칼럼들이 아래로 떨어지도록 구성(화면이 좁아지면 화면을 벗어나는 칼럼은 다음 줄로 이동) (핀터레스트)
4. 레이아웃 이동 패턴 -> 칼럼 드롭 패턴과 비슷하지만 화면 크기에 따라서 레이아웃을 다양하게 만드는 형태(www.kwater.or.kr)
5. 캔버스 밖으로 패턴 -> 반응형 웹 디자인을 모바일 화면에 맞게 적용하다 보면 컨텐츠들을 하나씩 수직으로 쌓게 됨 / 컨텐츠가 많을 때 작은 모바일 화면에서 다 담으려고 하면 세로 스크롤이 너무 길어짐 / 일부 컨텐츠들을 화면 밖에 감춰뒀다가 사용자가 필요할 때 꺼내오는 패턴 (nia.or.kr)

반응형 웹은 어떻게 만들까? 미디어쿼리를 사용하면 됨 / 부트스트랩을 사용해도 됨 (부트스트랩은 참고를 하는 용)
theborn.co.kr 개발자모드 -> 미디어쿼리 -> 파란색막대(max-width 조건) / 녹색막대(max-width, min-width 조건) / 주황막대(min-width 조건)

플랫 디자인(https://flatuicolors.com/)
납작하다 -> 디자인에서는 깊이(depth)를 제거해 입체감을 없앴다는 의미
깊이 -> 그림자, 경사, 그라뎅이션 등 컨텐츠를 입체적으로 보이기 위해 사용하는 여러 가지 시각 효과
플랫 디자인 -> 컨텐츠에 입체감을 주는 시각 효과를 제거하고 단순하게 표현하는 기법
인터넷이 막 보급됐던 시기에는 사용자들이 웹 사이트 자체에 익숙하지 않아서 메뉴에서 어느 부분을 클릭해야 하는지 눈에 띄게 만들어야 했음
지금은 버튼을 눈에 띄게 디자인하지 않아도 어떤 것이 버튼인지 이미 사용자들은 잘 알고 있음
지금은 플랫 디자인이 웹 디자인의 주류 중 하나이고 앞으로도 큰 이변이 없는 한 쭉 주류
이제는 다양한 스마트기기에서 웹을 중심으로 자료를 공유하고 웹에서 직접 작업도 수행함
웹이 이제는 정보를 보여주는 곳을 넘어서 특정 기능을 실행하는 기반 환경이 된 것
특정 기능을 실행하는 기반 환경 -> 플랫폼 / 웹 플랫폼
웹 플랫폼이 되서 표준이 만들어짐
웹 표준 기술을 사용해서 웹 사이트를 제작할 때는 포토샵으로 화려하게 만든 이미지 대신 HTML5의 Canvas 나 SVG로 만든 간결한 이미지를 사용
그리고 모든 기기에서 동작할 수 있도록 CSS나 JS로 처리함
웹 표준에 맞춰 사이트를 제작할 때 플랫 디자인을 사용하면 로딩시간도 줄어들고 대부분의 기기에서 동일하게 보이는 디자인을 만들 수 있음
플랫 디자인 할 때 주의해야 할 점
1. 사용성을 위해 단순하게 디자인하기
2. 색상을 활용해서 강조하기
3. 간결하면서 인상적인 타이포그래피 
 - 플랫 디자인은 주로 글자를 통해 정보를 전달
 - 화려한 특수 글꼴이나 글자에 효과를 많이 넣으면 직관성을 해침
 - 최근에는 빅 타이포그래피가 인기를 끌고 있음

스큐어모피즘 디자인을 쉽게 얘기하면 사용자가 익숙하게 사용해온 것들에 대한 경험을 디지털 환경에서도 독같이 느낄 수 있게 디자인 하는 것(eastafricanbakery.com / 피아노앱)
피아노 앱처럼 피아놀르 보고 있는 듯한 느낌을 주는 UI 디자인과 구성이 스큐어모피즘 디자인
스큐어모피즘 디자인 단점 -> 웹 페이지의 기능보다 장식적인 요소에 치중
			정작 중요한 내용을 표시해야 할 공간이 없어지거나 고화질 이미지나 동영상을 사용해야하기 때문에 페이지 로딩 시간이 길어짐
지금처럼 PC뿐만 아니라 다양한 기기에서 웹 사이트에 접속하기 때문에 모든 기기를 고려한 시각적인 요소를 만들기는 불가능
그래서 플랫 디자인이 뜨는 것

머티리얼 디자인 (Material Design) -> 구글이 처음 시작한 디자인 (material.io/design, https://design.google/)
모든 환경에서 사용자 경험(UI/UX)를 하나로 묶기 위한 구글의 디자인 
머티리얼 디자인 vs 플랫 디자인
머티리얼 디자인은 평면에 가상의 빛을 이용한 입체 효과를 추가(공간감, 입체감을 부여)
머티리얼 디자인 라이트 -> 라이브러리 제공(getmdl.io)

카드형 디자인
카드 뉴스, 페이스북, 유튜브



